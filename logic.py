# -*- coding: utf-8 -*-
"""logic.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CyG5YoyOTuQwO7Dlv9OVuXMT37Vd6MoD
"""

import pandas as pd
import numpy as np
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

import streamlit as st





import streamlit as st
import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

st.title("Diabetes Prediction using Logistic Regression")

uploaded_file = st.file_uploader("/content/diabetes.xlsx", type=["xlsx"])

if uploaded_file:
    dat = pd.read_excel(uploaded_file)

    # Show data preview
    st.subheader("Dataset Preview")
    st.write(dat.head())

    # Train model
    ind = dat[['age', 'plas', 'insu', 'mass']]
    dep = dat['class']

    model = LogisticRegression()
    model.fit(ind, dep)

    st.subheader("Enter Patient Data:")
    age = st.number_input("Age", min_value=1, max_value=120, value=30)
    plas = st.number_input("Plasma Glucose", min_value=0, max_value=200, value=100)
    insu = st.number_input("Insulin", min_value=0, max_value=1000, value=100)
    mass = st.number_input("Body Mass Index (BMI)", min_value=10.0, max_value=80.0, value=25.0)

    if st.button("Predict"):
        result = model.predict([[age, plas, insu, mass]])
        if result[0] == 1:
            st.success("Prediction: Diabetic")
        else:
            st.success("Prediction: Not Diabetic")

    st.subheader("Model Accuracy on Training Data:")
    pred_train = model.predict(ind)
    acc = accuracy_score(dep, pred_train)
    st.write(f"Accuracy: {acc:.2f}")
else:
    st.warning("Please upload the diabetes.xlsx file to continue.")







