# -*- coding: utf-8 -*-
"""log regress.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1J7YwKYhuj3f3i1EZSUIkC1ltbNUEoERZ
"""

import streamlit as st
import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

st.title("Diabetes Prediction using Logistic Regression")

# âœ… Sample data embedded directly (no Excel file needed)
data = {
    'age': [50, 31, 32, 45, 29],
    'plas': [148, 85, 89, 120, 94],
    'insu': [0, 0, 94, 0, 168],
    'mass': [33.6, 26.6, 28.1, 35.3, 23.1],
    'class': [1, 0, 0, 1, 0]
}
dat = pd.DataFrame(data)

# Show data preview
st.subheader("Dataset Preview")
st.write(dat.head())

# Train the model
ind = dat[['age', 'plas', 'insu', 'mass']]
dep = dat['class']

model = LogisticRegression()
model.fit(ind, dep)

# Input form
st.subheader("Enter Patient Data:")
age = st.number_input("Age", min_value=1, max_value=120, value=30)
plas = st.number_input("Plasma Glucose", min_value=0, max_value=200, value=100)
insu = st.number_input("Insulin", min_value=0, max_value=1000, value=100)
mass = st.number_input("Body Mass Index (BMI)", min_value=10.0, max_value=80.0, value=25.0)

# Predict
if st.button("Predict"):
    result = model.predict([[age, plas, insu, mass]])
    if result[0] == 1:
        st.success("ðŸŽ¯ Prediction: Diabetic")
    else:
        st.success("ðŸ’ª Prediction: Not Diabetic")

# Accuracy
st.subheader("Model Accuracy:")
pred_train = model.predict(ind)
acc = accuracy_score(dep, pred_train)
st.write(f"Accuracy: {acc:.2f}")

dat.head()